{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["App","useState","id","text","user","avatar","username","posts","setPosts","postContent","setPostContent","console","log","map","i","className","Helmet","name","content","onSubmit","event","preventDefault","newPost","length","value","onChange","target","placeholder","type","post","src","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8MAAe,I,mBC6EAA,MAxEf,WAAgB,IAAD,EACYC,mBAAS,CAAC,CAC/BC,GAAI,EACJC,KAAM,cACNC,KAAM,CACJC,OAAQ,uGACRC,SAAU,cAGd,CACEJ,GAAI,EACJC,KAAM,cACNC,KAAM,CACJC,OAAQ,4NACRC,SAAU,kBAdH,mBACNC,EADM,KACAC,EADA,OAiBsBP,mBAAS,IAjB/B,mBAiBNQ,EAjBM,KAiBMC,EAjBN,OAoBCT,mBAAS,KApBV,mBAsCX,OAtCW,UAmCXU,QAAQC,IAAIL,EAAMM,KAAI,SAAAC,GAAC,OAAEA,EAAEZ,OAIzB,sBAAKa,UAAU,YAAf,UAEE,eAACC,EAAA,EAAD,WACE,qDACA,sBAAMC,KAAK,cAAcC,QAAQ,iDAGnC,qBAAKH,UAAU,WAAf,SACE,uBAAMI,SA1BO,SAACC,GAClBA,EAAMC,iBACN,IAAMC,EAAU,CACdpB,GAAIK,EAAMgB,OAAS,EACnBpB,KAAMM,EACNL,KAAM,CACJC,OAAQ,4FACRC,SAAU,cAGdE,EAAS,CAACc,GAAF,mBAAcf,KACtBG,EAAgB,KAeZ,UACE,0BAAUc,MAAOf,EAAagB,SA7BT,SAACX,GAAKJ,EAAeI,EAAEY,OAAOF,QA6BcG,YAAY,4BAC7E,uBAAOC,KAAK,SAASJ,MAAM,gBAK/B,qBAAKT,UAAU,OAAf,SACGR,EAAMM,KAAI,SAACgB,EAAMf,GAAP,OAET,cADF,CACE,OAAmBC,UAAU,OAA7B,UACE,sBAAKA,UAAU,SAAf,UACE,qBAAKe,IAAKD,EAAKzB,KAAKC,SACpB,6BAAKwB,EAAKzB,KAAKE,cAEjB,mBAAGS,UAAU,UAAb,SACGc,EAAK1B,SANA0B,EAAK3B,aClDZ6B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.064f4e50.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\nimport {useState} from 'react';\nimport { Helmet } from 'react-helmet';\n\nfunction App() {\n  const [posts,setPosts] = useState([{\n      id: 2,\n      text: 'Lorem ipsum',\n      user: {\n        avatar: 'https://upload.wikimedia.org/wikipedia/commons/thumb/3/33/ZXSpectrum48k.jpg/1200px-ZXSpectrum48k.jpg',\n        username: 'Test User'\n      }\n    },\n    {\n      id: 1,\n      text: 'Lorem ipsum',\n      user: {\n        avatar: 'https://media1.popsugar-assets.com/files/thumbor/xHsdfHlAK7zK4LTV1P3VGmXpFD0/fit-in/2048xorig/filters:format_auto-!!-:strip_icc-!!-/2020/02/26/811/n/24155406/tmp_iqaEWn_a18b5b1758198bda_andreadomjanphotography_047.jpg',\n        username: 'Test User 2'\n      }\n    }]);\n    let [postContent,setPostContent]=useState('');\n\n    let handlePostContentChange =(i)=>{setPostContent(i.target.value)};\n    let [t1,t2]=useState('S');\n    let handleSubmit = (event) => {\n      event.preventDefault();\n      const newPost = {\n        id: posts.length + 1,\n        text: postContent,\n        user: {\n          avatar: 'https://i2-prod.mirror.co.uk/incoming/article11338552.ece/ALTERNATES/s615b/PROD-Tegan.jpg',\n          username: 'Fake User'\n        }\n      };\n      setPosts([newPost, ...posts])\n      setPostContent( '')\n    }\n\n    console.log(posts.map(i=>i.id));\n      \n\n    return (\n      <div className=\"container\">\n        \n        <Helmet>\n          <title>Graphbook - Feed</title>\n          <meta name=\"description\" content=\"Newsfeed of all your friends on Graphbook\" />\n        </Helmet>\n\n        <div className=\"postForm\">\n          <form onSubmit={handleSubmit}>\n            <textarea value={postContent} onChange={handlePostContentChange} placeholder=\"Write your custom post!\"/>\n            <input type=\"submit\" value=\"Submit\" />\n          </form>\n        </div>\n\n\n        <div className=\"feed\">\n          {posts.map((post, i) =>\n          // <div>aa{JSON.stringify(post.id)}</div>\n            <div key={post.id} className=\"post\">\n              <div className=\"header\">\n                <img src={post.user.avatar} />\n                <h2>{post.user.username}</h2>\n              </div>\n              <p className=\"content\">\n                {post.text}\n              </p>\n            </div>\n          )}\n        </div>\n      </div>\n    )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}